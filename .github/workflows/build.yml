name: Build TexLive Source

on:
  workflow_dispatch:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  texlive-built:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          [
            "texlive-core",
            "texlive-bibtex-extra",
            "texlive-extra-utils",
            "texlive-fonts-extra",
            "texlive-fonts-recommended",
            "texlive-font-utils",
            "texlive-formats-extra",
            "texlive-games",
            "texlive-humanities",
            "texlive-lang-arabic",
            "texlive-lang-chinese",
            "texlive-lang-cjk",
            "texlive-lang-cyrillic",
            "texlive-lang-czechslovak",
            "texlive-lang-english",
            "texlive-lang-european",
            "texlive-lang-french",
            "texlive-lang-german",
            "texlive-lang-greek",
            "texlive-lang-italian",
            "texlive-lang-japanese",
            "texlive-lang-korean",
            "texlive-lang-other",
            "texlive-lang-polish",
            "texlive-lang-portuguese",
            "texlive-lang-spanish",
            "texlive-latex-extra",
            "texlive-latex-recommended",
            "texlive-luatex",
            "texlive-metapost",
            "texlive-music",
            "texlive-pictures",
            "texlive-plain-generic",
            "texlive-pstricks",
            "texlive-publishers",
            "texlive-science",
          ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - uses: actions/cache@v2
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: 1
        run: |
          python -m pip install --user 'wheel==0.36.2'
          python -m pip install -r requirements.txt

      - name: Download
        env:
          version: ${{ steps.version.outputs.version }}
          event: ${{ github.event_name }}
          tag_act: ${{ github.ref }}
          GITHUB_TOKEN: ${{ github.token }}
          REPO: ${{ github.repository }}
          ALT_TOKEN: ${{ secrets.ALT_TOKEN }}
        shell: pwsh
        run: |
          mkdir build
          python -m texlive build ${{ matrix.package }} $PWD\build

      - uses: actions/upload-artifact@v2
        if: ${{ github.event_name != 'release' }}
        with:
          path: build/*
          name: build-assets-${{ matrix.package }}

  update-release-body:
    name: Update Release Body
    runs-on: windows-latest
    if: ${{ github.event_name== 'release' }}
    needs: texlive-built
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - uses: actions/cache@v2
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt

      - name: Update Release Body
        env:
          version: ${{ steps.version.outputs.version }}
          event: ${{ github.event_name }}
          tag_act: ${{ github.ref }}
          GITHUB_TOKEN: ${{ secrets.ALT_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          python scripts/update_release_body.py
