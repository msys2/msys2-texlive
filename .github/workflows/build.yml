name: Build TexLive Source

on:
  workflow_dispatch:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  texlive-built:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          [
            "texlive-core",
            "texlive-bibtexextra",
            "texlive-fontsextra",
            "texlive-formatsextra",
            "texlive-games",
            "texlive-humanities",
            "texlive-langchinese",
            "texlive-langcyrillic",
            #"texlive-langextra",
            "texlive-langgreek",
            "texlive-langjapanese",
            "texlive-langkorean",
            "texlive-latexextra",
            "texlive-music",
            "texlive-pictures",
            "texlive-pstricks",
            "texlive-publishers",
            "texlive-science",
          ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt

      - name: Download
        env:
          version: ${{ steps.version.outputs.version }}
          event: ${{ github.event_name }}
          tag_act: ${{ github.ref }}
          GITHUB_TOKEN: ${{ github.token }}
          REPO: ${{ github.repository }}
        shell: pwsh
        run: |
          mkdir build
          python -m texlive ${{ matrix.package }} $PWD\build

      - uses: actions/upload-artifact@v2
        with:
          path: build/*
          name: build-assets-${{ matrix.package }}
  update-release-body:
    name: Update Release Body
    runs-on: windows-latest
    if: ${{ github.event_name== 'release' }}
    needs: texlive-built
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      
      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt
      
      - name: Update Release Body
        env:
          version: ${{ steps.version.outputs.version }}
          event: ${{ github.event_name }}
          tag_act: ${{ github.ref }}
          GITHUB_TOKEN: ${{ github.token }}
          REPO: ${{ github.repository }}
        run: |
          python scripts/update_release_body.py
